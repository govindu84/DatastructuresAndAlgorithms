What is DataStructre?
It is a way of organizing data so that it can be used effectively. 

Why Datastructures?
They are essential ingredients in creating fast and powerfull algorithms.
They help to manage and organize data

Abstract Data type
An Abstract data type(ADT) is an abstraction of a data structure which provides only the interface to which a data structre must adhre to.
The interface doe not give any specific details about how something should be implemented or in what progamming language.

Complexity analysis
Time complexity: How much time does this algorthim takes to finsih.
Space complexity: How much space does this algorthim need for its computation.

Big Oh Notation, Ο
It is the formal way to express the upper bound of an algorithm's running time. It measures the worst case time complexity or the longest amount of time an algorithm can possibly take to complete.
Algorithm Complexity can be constant, logarithmic, linear, n*log(n), quadratic, cubic, exponential, etc.
***n-is the size of input 
Constant Time: O(1)
Logarithmic Time: O(log(n))
Linear Time: O(n)
Linearimithic Time: O(nlong(n))
Quadric Time:O(n2)    ** n power of 2
Cubic Time: O(n3)     ** n power of 3
Exponential Time: O(2n) ** 2 power of n
Factorial Time :O(n!)


Array
Array is a container which can hold a fix number of items and these items should be of the same type. Most of the data structures make use of arrays to implement their algorithms. 
Following are the important terms to understand the concept of Array.
•	Element − Each item stored in an array is called an element.
•	Index − Each location of an element in an array has a numerical index, which is used to identify the element.

Static Array:
A static Array is the most common form of array used. It is the type of array whose size cannot be altered. 
For Example :- int c[5] creates a array of size 5 elements only, you cannot add a 6th element as the size of Array is fixed.

Dynamic array:

A Dynamic array (vector in C++, ArrayList in Java) automatically grows when we try to make an insertion and there is no more space left for the new item.
Usually the area doubles in size.

How to implement Dynamic Array
1) Create a static array with an intial capacity
2) Add elements to the underlying static array, keeping track of the number of elements.
3) if adding another element will exceed the capacity, then create a new static array with twice the capacity and copy the original elements into it.

